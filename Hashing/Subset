class Compute {
    public String isSubset(long a1[], long a2[], long n, long m) {
        HashSet<Long> result = new HashSet<>();
        // CHECK OF DATA TYPES

        // Add elements of a1 to HashSet
        for (int i = 0; i < n; i++) {
            result.add(a1[i]);
        }

        // Check if all elements of a2 are present in a1
        for (int j = 0; j < m; j++) {
        // WE USE NOT CONTAINS BECAUSE IF WE USED CONTAINS WE RETURNED TRUE IN THE FIRST INSTANCE THAT THE TWO CHARACTERS ARE SAME
            if (!result.contains(a2[j])) {
                return "No"; // If any element of a2 is not present in a1, a2 is not a subset of a1
            }
        }

        return "Yes"; // All elements of a2 are present in a1, so a2 is a subset of a1
    }
}

NAIVE APPROACH WILL BE USING TWO POINTER TO SEE IF ALL ELEMENTS ARE SAME AND RETURNING FALSE IF NOT
