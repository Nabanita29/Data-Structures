import java.util.*;

class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> wraplist = new ArrayList<>();
        if (root == null) {
            return wraplist;
        }
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);

        boolean zigzag = false;

        while (!queue.isEmpty()) {
            int levelNum = queue.size();
            ArrayList<Integer> result = new ArrayList<>();
            for (int i = 0; i < levelNum; i++) {
                TreeNode current = queue.poll();
                if (zigzag) {
                    result.add(0, current.val); // Add to the front for zigzag order
                } else {
                    result.add(current.val); // Add to the end for normal order
                }

                if (current.left != null) {
                    queue.offer(current.left);
                }
                if (current.right != null) {
                    queue.offer(current.right);
                }
            }
            wraplist.add(result); // Add the current level's result to the final list
            zigzag = !zigzag; // Toggle the zigzag flag for the next level
        }
        return wraplist;
    }
}
