
// IN RECURSION IN THE BASE CASE WE PUT THE TWO VARIABLE WE WANT TO PASS THROUGH THE RECURSIVE CALL
// IN RECURSIVE CALL WE JUST USE NODE1 NODE2

class Solution {
    public boolean isSymmetric(TreeNode root) {
        if (root == null) {
            return true;
        }

        return isMirror(root.left, root.right);
    }

    private boolean isMirror(TreeNode node1, TreeNode node2) {
        // Base case: If both nodes are null, they are symmetric.
        if (node1 == null && node2 == null) {
            return true;
        }
        
        // If one of the nodes is null (but not both), they are not symmetric.
        if (node1 == null || node2 == null) {
            return false;
        }

        // Check if values are equal and if the subtrees are symmetric.
        return (node1.val == node2.val) && 
               isMirror(node1.left, node2.right) && 
               isMirror(node1.right, node2.left);
    }
}
