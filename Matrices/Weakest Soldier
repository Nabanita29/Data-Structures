import java.util.Arrays;

class Solution {
    public int[] kWeakestRows(int[][] mat, int k) {
        int row = mat.length;
        int column = mat[0].length;
        int[] result = new int[k];
        int[] countArray = new int[row];

// Intialised all the requirenments

// Iterate through rows and columns and see the count of soldiers in each and fill in the count array

        for (int i = 0; i < row; i++) {
            int count = 0;
            for (int j = 0; j < column; j++) {
                if (mat[i][j] == 1) {
                    count++;
                } else {
                    break;
                }
            }
            countArray[i] = count;
        }

        // Create an array of row indices and sort them based on the counts
        Integer[] indices = new Integer[row];
        for (int i = 0; i < row; i++) {
            indices[i] = i;
        }
        Arrays.sort(indices, (a, b) -> Integer.compare(countArray[a], countArray[b]));

        // Copy the first k indices to the result array
        for (int i = 0; i < k; i++) {
            result[i] = indices[i];
        }

        return result;
    }
}
